// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import type { ColumnType, Selectable, Insertable, Updateable } from 'kysely';

import type { default as PropertyType } from './PropertyType';
import type { DealId } from './Deal';

/** Identifier type for tenant_base_org.property */
export type PropertyId = string & { __brand: 'PropertyId' };

/**
 * PUBLIC:
 * Represents the table tenant_base_org.property
 */
export default interface PropertyTable {
  /** Database type: pg_catalog.uuid */
  id: ColumnType<PropertyId, PropertyId | undefined, PropertyId>;

  /** Database type: pg_catalog.text */
  external_id: ColumnType<string | null, string | null, string | null>;

  /** Database type: pg_catalog.timestamptz */
  created_at: ColumnType<Date, Date | string | undefined, Date | string>;

  /** Database type: pg_catalog.timestamptz */
  updated_at: ColumnType<Date, Date | string | undefined, Date | string>;

  /** Database type: pg_catalog.text */
  description: ColumnType<string | null, string | null, string | null>;

  /** Database type: pg_catalog.text[] */
  tags: ColumnType<string[] | null, string[] | null, string[] | null>;

  /** Database type: pg_catalog.int4 */
  year_built: ColumnType<number | null, number | null, number | null>;

  /** Database type: pg_catalog.float8 */
  area_sq_km: ColumnType<number | null, number | null, number | null>;

  /** Database type: tenant_base_org.property_type */
  type: ColumnType<
    PropertyType | null,
    PropertyType | null,
    PropertyType | null
  >;

  /** Database type: tenant_base_org.property_type[] */
  amenities: ColumnType<
    PropertyType[] | null,
    PropertyType[] | null,
    PropertyType[] | null
  >;

  /** Database type: pg_catalog.date */
  submitted_at: ColumnType<
    Date | null,
    Date | string | null,
    Date | string | null
  >;

  /** Database type: pg_catalog.timestamptz */
  last_census_at: ColumnType<
    Date | null,
    Date | string | null,
    Date | string | null
  >;

  /** Database type: pg_catalog.bool */
  is_condo: ColumnType<boolean | null, boolean | null, boolean | null>;

  /** Database type: pg_catalog.uuid */
  deal_id: ColumnType<DealId, DealId, DealId>;
}

export type Property = Selectable<PropertyTable>;

export type NewProperty = Insertable<PropertyTable>;

export type PropertyUpdate = Updateable<PropertyTable>;
