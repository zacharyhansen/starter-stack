{"version":3,"sources":["../../src/view/view.router.ts"],"sourcesContent":["import { Input, Mutation, Query, Router } from 'nestjs-trpc';\nimport { z } from 'zod';\nimport { Inject } from '@nestjs/common';\n\nimport { ViewService, type ColumnEnabledRecord } from './view.service';\n\n@Router({ alias: 'view' })\nexport class ViewRouter {\n  constructor(@Inject(ViewService) private viewService: ViewService) {}\n\n  @Query({\n    input: z.object({ name: z.string() }),\n    output: z.any(),\n  })\n  columnByRoleView(@Input('name') name: string) {\n    return this.viewService.columnsByRoleView({ name });\n  }\n\n  @Mutation({\n    input: z.object({\n      name: z.string(),\n      columnEnabledRecords: z\n        .object({\n          column_name: z.string(),\n        })\n        .catchall(z.any())\n        .array(),\n    }),\n    output: z.literal('ok'),\n  })\n  async mutateViewsForRoles(\n    @Input('name') name: string,\n    @Input('columnEnabledRecords') columnEnabledRecords: ColumnEnabledRecord[]\n  ) {\n    await this.viewService.mutateViewsForRoles({ name, columnEnabledRecords });\n    return 'ok';\n  }\n}\n"],"names":["ViewRouter","constructor","viewService","columnByRoleView","name","columnsByRoleView","mutateViewsForRoles","columnEnabledRecords","input","z","object","string","output","any","column_name","catchall","array","literal","alias"],"mappings":";;;;+BAOaA;;;eAAAA;;;4BAPkC;qBAC7B;wBACK;6BAE+B;;;;;;;;;;;;;;;AAG/C,IAAA,AAAMA,aAAN,MAAMA;IACXC,YAAY,AAA6BC,WAAwB,CAAE;aAA1BA,cAAAA;IAA2B;IAMpEC,iBAAiB,AAAeC,IAAY,EAAE;QAC5C,OAAO,IAAI,CAACF,WAAW,CAACG,iBAAiB,CAAC;YAAED;QAAK;IACnD;IAEA,MAYME,oBACJ,AAAeF,IAAY,EAC3B,AAA+BG,oBAA2C,EAC1E;QACA,MAAM,IAAI,CAACL,WAAW,CAACI,mBAAmB,CAAC;YAAEF;YAAMG;QAAqB;QACxE,OAAO;IACT;AACF;;;QA1BIC,OAAOC,MAAC,CAACC,MAAM,CAAC;YAAEN,MAAMK,MAAC,CAACE,MAAM;QAAG;QACnCC,QAAQH,MAAC,CAACI,GAAG;;;;;;;;;;;QAObL,OAAOC,MAAC,CAACC,MAAM,CAAC;YACdN,MAAMK,MAAC,CAACE,MAAM;YACdJ,sBAAsBE,MAAC,CACpBC,MAAM,CAAC;gBACNI,aAAaL,MAAC,CAACE,MAAM;YACvB,GACCI,QAAQ,CAACN,MAAC,CAACI,GAAG,IACdG,KAAK;QACV;QACAJ,QAAQH,MAAC,CAACQ,OAAO,CAAC;;;;;;;;;;;;;QAtBZC,OAAO"}