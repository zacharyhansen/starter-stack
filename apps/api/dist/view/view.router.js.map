{"version":3,"sources":["../../src/view/view.router.ts"],"sourcesContent":["import { TRPCError } from '@trpc/server';\nimport { Input, Query, Router } from 'nestjs-trpc';\nimport { z } from 'zod';\n\nimport { Public } from '~/auth/decorators/public.decorator';\n\nconst userSchema = z.string();\n\ntype User = z.infer<typeof userSchema>;\n\n@Router({ alias: 'view' })\nexport class ViewRouter {\n  @Query({\n    input: z.object({ userId: z.string() }),\n    output: userSchema,\n  })\n  userById(@Input('userId') userId: string | null): Promise<User> {\n    if (userId == null) {\n      throw new TRPCError({\n        code: 'NOT_FOUND',\n        message: 'Could not find user.',\n      });\n    }\n\n    return Promise.resolve(userId);\n  }\n\n  @Query({\n    output: z.object({}),\n  })\n  relationTree(): Promise<object> {\n    return Promise.resolve({});\n  }\n}\n"],"names":["ViewRouter","userSchema","z","string","userById","userId","TRPCError","code","message","Promise","resolve","relationTree","input","object","output","alias"],"mappings":";;;;+BAWaA;;;eAAAA;;;wBAXa;4BACW;qBACnB;;;;;;;;;;;;;;;AAIlB,MAAMC,aAAaC,MAAC,CAACC,MAAM;AAKpB,IAAA,AAAMH,aAAN,MAAMA;IAKXI,SAAS,AAAiBC,MAAqB,EAAiB;QAC9D,IAAIA,UAAU,MAAM;YAClB,MAAM,IAAIC,iBAAS,CAAC;gBAClBC,MAAM;gBACNC,SAAS;YACX;QACF;QAEA,OAAOC,QAAQC,OAAO,CAACL;IACzB;IAKAM,eAAgC;QAC9B,OAAOF,QAAQC,OAAO,CAAC,CAAC;IAC1B;AACF;;;QApBIE,OAAOV,MAAC,CAACW,MAAM,CAAC;YAAER,QAAQH,MAAC,CAACC,MAAM;QAAG;QACrCW,QAAQb;;;;;;;;;;;QAcRa,QAAQZ,MAAC,CAACW,MAAM,CAAC,CAAC;;;;;;;;QAlBZE,OAAO"}