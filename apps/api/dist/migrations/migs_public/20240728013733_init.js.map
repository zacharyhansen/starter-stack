{"version":3,"sources":["../../../src/migrations/migs_public/20240728013733_init.ts"],"sourcesContent":["// eslint-disable-next-line unicorn/filename-case\nimport type { Knex } from 'knex';\n\nimport { withIds } from '../helpers/uuid-external';\nimport { withUSAddress } from '../helpers/with-us-address';\n\nexport async function up(knex: Knex): Promise<void> {\n  return (\n    knex.schema\n      // Create \"in database configuration for postgrest API\"\n      .raw('CREATE SCHEMA postgrest;')\n      .raw(\n        `\n        CREATE OR REPLACE FUNCTION postgrest.pre_config()\n        RETURNS void AS $$\n          SELECT\n            set_config('pgrst.jwt_secret', '${process.env.CLERK_PUBLIC_JWT}', true),\n            set_config('pgrst.db_schemas', string_agg(nspname, ','), true)\n          from (\n              SELECT nspname \n              FROM pg_namespace \n              WHERE nspname LIKE 'tenant_%'\n              UNION ALL\n              SELECT 'public'\n          ) AS namespaces;\n        $$ language sql;\n      `\n      )\n      .raw(\n        `\n          -- watch CREATE and ALTER\n          CREATE OR REPLACE FUNCTION pgrst_ddl_watch() RETURNS event_trigger AS $$\n          DECLARE\n            cmd record;\n          BEGIN\n            FOR cmd IN SELECT * FROM pg_event_trigger_ddl_commands()\n            LOOP\n              IF cmd.command_tag IN (\n                'CREATE SCHEMA', 'ALTER SCHEMA'\n              , 'CREATE TABLE', 'CREATE TABLE AS', 'SELECT INTO', 'ALTER TABLE'\n              , 'CREATE FOREIGN TABLE', 'ALTER FOREIGN TABLE'\n              , 'CREATE VIEW', 'ALTER VIEW'\n              , 'CREATE MATERIALIZED VIEW', 'ALTER MATERIALIZED VIEW'\n              , 'CREATE FUNCTION', 'ALTER FUNCTION'\n              , 'CREATE TRIGGER'\n              , 'CREATE TYPE', 'ALTER TYPE'\n              , 'CREATE RULE'\n              , 'COMMENT'\n              )\n              -- don't notify in case of CREATE TEMP table or other objects created on pg_temp\n              AND cmd.schema_name is distinct from 'pg_temp'\n              THEN\n                NOTIFY pgrst, 'reload schema';\n              END IF;\n            END LOOP;\n          END; $$ LANGUAGE plpgsql;\n\n          -- watch DROP\n          CREATE OR REPLACE FUNCTION pgrst_drop_watch() RETURNS event_trigger AS $$\n          DECLARE\n            obj record;\n          BEGIN\n            FOR obj IN SELECT * FROM pg_event_trigger_dropped_objects()\n            LOOP\n              IF obj.object_type IN (\n                'schema'\n              , 'table'\n              , 'foreign table'\n              , 'view'\n              , 'materialized view'\n              , 'function'\n              , 'trigger'\n              , 'type'\n              , 'rule'\n              )\n              AND obj.is_temporary IS false -- no pg_temp objects\n              THEN\n                NOTIFY pgrst, 'reload schema';\n              END IF;\n            END LOOP;\n          END; $$ LANGUAGE plpgsql;\n\n          CREATE EVENT TRIGGER pgrst_ddl_watch\n            ON ddl_command_end\n            EXECUTE PROCEDURE pgrst_ddl_watch();\n\n          CREATE EVENT TRIGGER pgrst_drop_watch\n            ON sql_drop\n            EXECUTE PROCEDURE pgrst_drop_watch();\n        `\n      )\n      // Create authenticator role\n      .raw(\n        `CREATE ROLE authenticator NOINHERIT LOGIN PASSWORD '${process.env.DATABASE_PASSWORD}';`\n      )\n      // Create anonymous role\n      .raw('CREATE ROLE anonymous NOLOGIN;')\n      .raw('GRANT anonymous TO authenticator;')\n      // Create org admin role\n      .raw('CREATE ROLE \"org:admin\" NOLOGIN;')\n      .raw('GRANT \"org:admin\" TO authenticator;')\n      // Create and grant access to everything to super admin and add defaults\n      .raw(\n        `\n        DO $$\n        BEGIN\n          IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname = 'super_admin') THEN\n              CREATE ROLE super_admin NOLOGIN;\n          END IF;\n        END\n        $$;\n        `\n      )\n      .raw('GRANT super_admin TO authenticator;')\n      .raw('GRANT ALL ON ALL TABLES IN SCHEMA public TO super_admin;')\n      .raw('GRANT ALL ON ALL FUNCTIONS IN SCHEMA public TO super_admin;')\n      .raw(\n        'ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO super_admin;'\n      )\n      .raw(\n        'ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON FUNCTIONS TO super_admin;'\n      )\n      .raw(\"NOTIFY pgrst, 'reload config';\")\n      .raw(\n        `\n        CREATE TYPE state_usa AS ENUM (\n          'AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA',\n          'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD',\n          'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ',\n          'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC',\n          'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY'\n        );\n      `\n      )\n      .createTable('user', table => {\n        withIds(knex, table);\n        table.timestamps(true, true);\n        withUSAddress(knex, table);\n        table.string('clerk_id').notNullable().unique();\n        table.string('email').notNullable().unique();\n        table.text('name').nullable();\n        table.string('phone').nullable();\n        table.string('ssn', 9).nullable();\n        table.date('date_of_birth').nullable();\n        table.integer('credit_score').nullable();\n      })\n      .createTable('business', table => {\n        withIds(knex, table);\n        table.timestamps(true, true);\n        withUSAddress(knex, table);\n        table.string('email').nullable();\n        table.text('name_display').nullable();\n        table.text('name_legal').nullable();\n        table.string('duns', 9).nullable().unique();\n        table.string('dba').nullable().unique();\n        table.string('tin', 9).nullable().unique();\n        table.text('phone').nullable();\n        table.text('business_type').nullable();\n        table.text('industry').nullable();\n        table.date('date_business_began').nullable();\n        table.double('revenue_average').nullable();\n        table.double('debt').nullable();\n      })\n      .createTable('organization', table => {\n        table.string('id').primary();\n        table.text('external_id').nullable().unique();\n        table.timestamps(true, true);\n\n        table.text('name').notNullable();\n        table.string('clerk_id').unique().notNullable();\n\n        table\n          .enu('environment_type', ['production', 'uat'], {\n            enumName: `environment_type`,\n            useNative: true,\n          })\n          .notNullable()\n          .defaultTo('uat');\n      })\n      .createTable('organization_user', function (table) {\n        table.uuid('id').primary().defaultTo(knex.raw('gen_random_uuid()'));\n        table.timestamps(true, true);\n\n        table.string('organization_id').notNullable();\n        table.uuid('user_id').notNullable();\n\n        table\n          .foreign('organization_id')\n          .references('id')\n          .inTable('public.organization')\n          .onDelete('CASCADE');\n        table\n          .foreign('user_id')\n          .references('id')\n          .inTable('public.user')\n          .onDelete('CASCADE');\n\n        table.unique(['organization_id', 'user_id']);\n      })\n      .createTable('business_user', function (table) {\n        table.uuid('id').primary().defaultTo(knex.raw('gen_random_uuid()'));\n        table.timestamps(true, true);\n\n        table.uuid('business_id').notNullable();\n        table.uuid('user_id').notNullable();\n        table.text('job_title').nullable();\n        table.double('owernship').nullable();\n        table.double('income_average_monthly').nullable();\n        table.double('expense_average_monthly').nullable();\n\n        table\n          .foreign('business_id')\n          .references('id')\n          .inTable('public.business')\n          .onDelete('CASCADE');\n        table\n          .foreign('user_id')\n          .references('id')\n          .inTable('public.user')\n          .onDelete('CASCADE');\n\n        table.unique(['business_id', 'user_id']);\n      })\n      .createTable('organization_business', function (table) {\n        table.uuid('id').primary().defaultTo(knex.raw('gen_random_uuid()'));\n        table.timestamps(true, true);\n\n        table.string('organization_id').notNullable();\n        table.uuid('business_id').notNullable();\n\n        table\n          .foreign('organization_id')\n          .references('id')\n          .inTable('public.organization')\n          .onDelete('CASCADE');\n        table\n          .foreign('business_id')\n          .references('id')\n          .inTable('public.business')\n          .onDelete('CASCADE');\n\n        table.unique(['organization_id', 'business_id']);\n      })\n  );\n}\n\nexport async function down(knex: Knex): Promise<void> {\n  return knex.schema\n    .dropTable('organization_user')\n    .dropTable('organization_business')\n    .dropTable('business_user')\n    .dropTable('user')\n    .dropTable('organization')\n    .dropTable('business')\n    .raw('DROP TYPE state_usa;')\n    .raw(`DROP TYPE IF EXISTS environment_type`)\n    .raw('REVOKE ALL ON ALL TABLES IN SCHEMA public FROM super_admin;')\n    .raw('REVOKE ALL ON ALL FUNCTIONS IN SCHEMA public FROM super_admin;')\n    .raw(\n      'ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE ALL ON TABLES FROM super_admin;'\n    )\n\n    .raw(\n      'ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE ALL ON FUNCTIONS FROM super_admin;'\n    )\n    .raw(`REVOKE ALL ON SCHEMA public from super_admin;`)\n    .raw(`REVOKE ALL ON SCHEMA public from super_admin;`)\n    .raw('DROP FUNCTION IF EXISTS postgrest.pre_config();')\n    .raw('DROP FUNCTION IF EXISTS pgrst_ddl_watch() CASCADE;')\n    .raw('DROP EVENT TRIGGER IF EXISTS pgrst_ddl_watch;')\n    .raw('DROP EVENT TRIGGER IF EXISTS pgrst_drop_watch;')\n    .raw('REVOKE USAGE ON SCHEMA postgrest FROM authenticator;')\n    .raw('DROP SCHEMA IF EXISTS postgrest;')\n    .raw('DROP ROLE IF EXISTS authenticator;')\n    .raw('DROP ROLE IF EXISTS anonymous;')\n    .raw('DROP ROLE IF EXISTS \"org:admin\";');\n}\n"],"names":["down","up","knex","schema","raw","process","env","CLERK_PUBLIC_JWT","DATABASE_PASSWORD","createTable","table","withIds","timestamps","withUSAddress","string","notNullable","unique","text","nullable","date","integer","double","primary","enu","enumName","useNative","defaultTo","uuid","foreign","references","inTable","onDelete","dropTable"],"mappings":"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"}